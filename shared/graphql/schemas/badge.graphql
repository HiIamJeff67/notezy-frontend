type PublicBadge {
  # id: UUID!
  publicId: String! # the encoded of this field is the identifier of the PublicBadge
  title: String!
  description: String!
  type: BadgeType!
  imageURL: String
  createdAt: Time!

  # relations
  users: [PublicUser!]!
}

# =============== Search Filters & SortBy & SortOrder =============== #

input SearchBadgeFilters {
  type: BadgeType
}

enum SearchBadgeSortBy {
  RELEVANCE
  TITLE
  CREATED_AT
}

input SearchBadgeInput {
  query: String!
  after: String
  first: Int = 10
  filters: SearchBadgeFilters
  sortBy: SearchBadgeSortBy = RELEVANCE
  sortOrderr: SearchSortOrder = DESC
}

# =============== Search Cursor Fields =============== #

# type SearchBadgeEnvironmentAttributes {}

input SearchBadgeCursorFields {
  publicId: String!
  # environmentAttributes: SearchBadgeEnvironmentAttributes
}

# =============== Search Edge & Connection =============== #

type SearchBadgeEdge implements SearchEdge {
  encodedSearchCursor: String! # the search identifier
  node: PublicBadge! # the search result
}

type SearchBadgeConnection implements SearchConnection {
  searchEdges: [SearchBadgeEdge!]!
  searchPageInfo: SearchPageInfo!
  totalCount: Int!
  searchTime: Float!
}
